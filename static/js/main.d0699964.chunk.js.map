{"version":3,"sources":["component/ContactForm/ContactForm.module.css","component/ContactList/ContactList.module.css","component/Filter/Filter.module.css","component/section/Section.module.css","component/ContactList/ContactList.js","component/ContactForm/ContactForm.js","component/Filter/Filter.js","component/section/Section.js","App.js","index.js"],"names":["module","exports","ContactList","contacts","onDeleteContacts","className","styles","title","list","map","id","name","number","item","text","btn","type","onClick","ContactForm","state","handleChange","e","console","log","setState","target","value","handleSubmit","preventDefault","props","onSubmit","reset","form","this","label","onChange","input","pattern","required","Component","Filter","Section","children","section","App","filter","addContact","contact","uuidv4","some","toLowerCase","alert","deleteContacts","ContactId","prevState","formSubmitHandler","data","changeFilter","currentTarget","getVisibleContacts","normalizedFilter","includes","visibleContacts","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d0699964.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__24QMZ\",\"label\":\"ContactForm_label__7QmTV\",\"input\":\"ContactForm_input__2SRCL\",\"btn\":\"ContactForm_btn__sN9N2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__2lVee\",\"list\":\"ContactList_list__28wm3\",\"item\":\"ContactList_item__1Cqea\",\"text\":\"ContactList_text__wsQzj\",\"btn\":\"ContactList_btn__2BUIK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3ra-Y\",\"input\":\"Filter_input__1OldS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Hvl6k\",\"title\":\"Section_title__1lYdA\"};","import React from 'react';\nimport styles from './ContactList.module.css';\n\nconst ContactList = ({ contacts, onDeleteContacts }) => (\n  <>\n    <h2 className={styles.title}>Contacts</h2>\n    <ul className={styles.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={styles.item} key={id}>\n          <span className={styles.text}>\n            {name}: {number}\n          </span>\n\n          <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={() => onDeleteContacts(id)}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  </>\n);\n\nexport default ContactList;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  static propTypes = {\n    name: PropTypes.string,\n    number: PropTypes.string,\n  };\n  handleChange = e => {\n    console.log(e);\n    // const { name, value } = e.currentTarget;\n    // this.setState({ [name]: value });\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    return (\n      <>\n        <form className={styles.form} onSubmit={this.handleSubmit}>\n          <label className={styles.label}>\n            Name\n            <input\n              value={this.state.name}\n              onChange={this.handleChange}\n              type=\"text\"\n              name=\"name\"\n              className={styles.input}\n              pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n              title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n              required\n            />\n          </label>\n\n          <label className={styles.label}>\n            Number\n            <input\n              value={this.state.number}\n              onChange={this.handleChange}\n              type=\"tel\"\n              name=\"number\"\n              className={styles.input}\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n              required\n            />\n          </label>\n          <button className={styles.btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nexport default ContactForm;\n","import styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => (\n  <label className={styles.label}>\n    Find contacts by name\n    <input\n      className={styles.input}\n      type=\"text\"\n      value={value}\n      onChange={onChange}\n    />\n  </label>\n);\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport styles from './Section.module.css';\n\nconst Section = ({ title, children }) => (\n  <section className={styles.section}>\n    <h2 className={styles.title}>{title}</h2>\n    {children}\n  </section>\n);\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n\nexport default Section;\n","import './App.css';\nimport { Component } from 'react';\nimport ContactList from './component/ContactList/ContactList';\nimport ContactForm from './component/ContactForm/ContactForm';\nimport Filter from './component/Filter/Filter';\nimport Section from './component/section/Section';\nimport { v4 as uuidv4 } from 'uuid';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    const { contacts } = this.state;\n\n    const contact = {\n      name: name,\n      number: number,\n      id: uuidv4(),\n    };\n    contacts.some(\n      ({ name }) => name.toLowerCase() === contact.name.toLowerCase(),\n    )\n      ? alert(`${name} is already in contacts`)\n      : contacts.some(({ number }) => number === contact.number)\n      ? alert(`${number} is already in contacts`)\n      : this.setState(({ contacts }) => ({ contacts: [contact, ...contacts] }));\n  };\n\n  deleteContacts = ContactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== ContactId),\n    }));\n  };\n\n  formSubmitHandler = data => {\n    console.log(data);\n  };\n\n  changeFilter = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(\n      contact =>\n        contact.name.toLowerCase().includes(normalizedFilter) ||\n        contact.number.includes(filter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n\n    return (\n      <>\n        <Section title=\"Phonebook\">\n          <ContactForm onSubmit={this.addContact} />\n\n          <Filter value={filter} onChange={this.changeFilter} />\n          <ContactList\n            contacts={visibleContacts}\n            onDeleteContacts={this.deleteContacts}\n          />\n        </Section>\n      </>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}